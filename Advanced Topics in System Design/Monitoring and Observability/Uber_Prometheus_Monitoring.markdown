# استفاده اوبر از Prometheus برای مانیتورینگ و مشاهده‌پذیری در سیستم‌های مقیاس بزرگ

## مرور کلی بر چالش‌های مانیتورینگ اوبر در مقیاس بزرگ

اوبر به‌عنوان یکی از بزرگ‌ترین پلتفرم‌های اشتراک سفر، با بیش از ۴,۰۰۰ میکروسرویس اختصاصی و مجموعه‌ای از فناوری‌های متن‌باز مانند MySQL، Cassandra، Redis، Kafka و ZooKeeper، با چالش‌های عظیمی در مانیتورینگ مواجه است. این چالش‌ها عبارت‌اند از:

- **حجم عظیم داده‌ها**: اوبر روزانه میلیاردها معیار (Metrics) تولید می‌کند، از جمله معیارهای مربوط به عملکرد برنامه‌ها، زیرساخت‌ها و رفتار کاربران در صدها شهر.
- **معماری توزیع‌شده**: سیستم‌های اوبر در مراکز داده محلی، AWS و Google Cloud Platform (GCP) اجرا می‌شوند، که نیاز به مشاهده‌پذیری جهانی و یکپارچه را ایجاد می‌کند.
- **پیچیدگی میکروسرویس‌ها**: با بیش از ۴,۰۰۰ میکروسرویس، رصد هر سرویس به‌صورت جداگانه و شناسایی گلوگاه‌ها یا خطاها چالش‌برانگیز است.
- **نیاز به هشداردهی بلادرنگ**: اوبر باید به‌سرعت مشکلات را شناسایی و هشدار دهد تا از قطعی سرویس‌ها یا تأثیر بر کاربران جلوگیری کند.
- **رشد سریع**: با رشد ۱۰ برابری سالانه در حجم داده‌ها، سیستم‌های مانیتورینگ قدیمی مانند Graphite و Nagios دیگر مقیاس‌پذیر نبودند.

این چالش‌ها اوبر را وادار کرد تا به‌دنبال راه‌حل‌های مدرن و مقیاس‌پذیر مانند **Prometheus** برای مانیتورینگ و مشاهده‌پذیری باشد.

---

## چرا اوبر Prometheus را انتخاب کرد؟

اوبر در سال ۲۰۱۴ با مشکلاتی در استفاده از Graphite و Nagios مواجه شد، از جمله پیچیدگی در نگهداری، عدم مقیاس‌پذیری، و مشکلات در هشداردهی دقیق. دلایل انتخاب Prometheus عبارت‌اند از:

- **مدل داده چندبعدی**: Prometheus از یک مدل داده مبتنی بر برچسب (Labels) استفاده می‌کند که امکان تحلیل دقیق معیارها را فراهم می‌کند.
- **زبان پرس‌وجوی قدرتمند (PromQL)**: PromQL امکان پرس‌وجوهای پیچیده و تحلیل داده‌های سری زمانی را به‌صورت بلادرنگ فراهم می‌کند.
- **مقیاس‌پذیری برای محیط‌های Cloud-Native**: Prometheus برای معماری‌های میکروسرویس و Kubernetes طراحی شده است، که با زیرساخت اوبر هم‌راستا بود.
- **جامعه متن‌باز فعال**: به‌عنوان پروژه‌ای تحت Cloud Native Computing Foundation (CNCF)، Prometheus از پشتیبانی گسترده‌ای برخوردار است و با ابزارهای متن‌باز دیگر ادغام می‌شود.
- **سادگی عملیات**: باینری‌های مستقل و بدون وابستگی به ذخیره‌سازی توزیع‌شده، استقرار Prometheus را ساده می‌کنند.

راب اسکیلینگتون، سرپرست فنی مانیتورینگ در اوبر، اظهار داشت: «کتابخانه‌های کلاینت و ویژگی‌های Prometheus همان چیزی بود که مهندسان اوبر می‌خواستند با آن کار کنند.»[](https://www.cncf.io/case-studies/uber/)

---

## ادغام Prometheus در معماری سیستم اوبر

اوبر Prometheus را به‌عنوان بخشی از پلتفرم **M3** خود، که یک راه‌حل متن‌باز برای ذخیره‌سازی و پرس‌وجوی معیارهای مقیاس‌پذیر است، ادغام کرده است. معماری ادغام به‌صورت زیر است:

1. **جمع‌آوری معیارها**:
   - Prometheus از مدل Pull استفاده می‌کند و معیارها را از نقاط پایانی HTTP (مانند `/metrics`) جمع‌آوری می‌کند.
   - سرویس‌های اوبر و ابزارهای متن‌باز (مانند MySQL، Kafka) از اکسپورترهای Prometheus (مانند node_exporter) برای ارائه معیارها استفاده می‌کنند.

2. **ذخیره‌سازی و مقیاس‌پذیری با M3**:
   - به دلیل محدودیت‌های مقیاس‌پذیری Prometheus در ذخیره‌سازی تک‌نود، اوبر پلتفرم M3 را توسعه داد که شامل **M3DB** (پایگاه داده سری زمانی توزیع‌شده) و **M3 Coordinator** است.
   - M3DB معیارها را در خوشه‌های ذخیره‌سازی توزیع‌شده ذخیره می‌کند و امکان پرس‌وجوی جهانی در مراکز داده مختلف را فراهم می‌کند.
   - M3 Coordinator برای نمونه‌برداری (Downsampling)، تجمیع، و اعمال سیاست‌های نگه‌داری (Retention) استفاده می‌شود.

3. **پایپ‌لاین پردازش معیارها**:
   - معیارها از سرویس‌ها به M3 ارسال می‌شوند، تجمیع شده و در M3DB ذخیره می‌شوند.
   - Prometheus برای جمع‌آوری و پردازش اولیه معیارها و Alertmanager برای مدیریت هشدارها استفاده می‌شود.

4. **تجسم و داشبوردسازی**:
   - اوبر از **Grafana** برای نمایش معیارهای جمع‌آوری‌شده توسط Prometheus در داشبوردهای تعاملی استفاده می‌کند.
   - داشبوردهای Grafana برای رصد سلامت سرورها، عملکرد برنامه‌ها، و معیارهای تجاری (مانند تعداد سفرها در شهرها) استفاده می‌شوند.

5. **هشداردهی**:
   - اوبر از **uMonitor** و **Neris** برای هشداردهی مبتنی بر معیارها و بررسی‌های میزبان استفاده می‌کند.
   - **Origami**، یک پلتفرم اختصاصی، برای کاهش نویز هشدارها و تجمیع اعلان‌ها در سناریوهای پیچیده (مانند قطعی‌های چندشهری) استفاده می‌شود.[](https://www.uber.com/blog/observability-at-scale/)

---

## ویژگی‌های کلیدی Prometheus که اوبر از آن‌ها بهره می‌برد

اوبر از ویژگی‌های زیر Prometheus برای بهبود مشاهده‌پذیری و مانیتورینگ استفاده می‌کند:

1. **جمع‌آوری معیارها**:
   - Prometheus معیارهای عددی (مانند تعداد درخواست‌های HTTP، تأخیر سرویس، یا مصرف CPU) را به‌صورت سری زمانی با برچسب‌های چندبعدی جمع‌آوری می‌کند.
   - مثال: معیار `http_requests_total` برای رصد تعداد درخواست‌های API.

2. **زبان پرس‌وجوی PromQL**:
   - PromQL امکان تحلیل‌های پیچیده مانند نرخ خطا، تأخیر صدک (Percentile Latency)، یا مقایسه معیارها در بازه‌های زمانی را فراهم می‌کند.
   - مثال: پرس‌وجوی `rate(http_requests_total[5m])` برای محاسبه نرخ درخواست‌ها در ۵ دقیقه.

3. **هشداردهی با Alertmanager**:
   - اوبر قوانین هشدار را در Prometheus تعریف می‌کند و Alertmanager اعلان‌ها را به Slack، PagerDuty یا ایمیل ارسال می‌کند.
   - مثال: هشدار برای افزایش نرخ خطای یک سرویس یا قطعی در یک مرکز داده.

4. **پشتیبانی از اکسپورترها**:
   - اوبر از اکسپورترهای Prometheus (مانند node_exporter برای معیارهای سیستم و mysqld_exporter برای MySQL) برای رصد ابزارهای متن‌باز استفاده می‌کند.

5. **کشف سرویس پویا (Service Discovery)**:
   - Prometheus با Kubernetes و سایر پلتفرم‌های ابری ادغام می‌شود تا سرویس‌های جدید را به‌صورت خودکار کشف کند.

---

## نمونه‌های واقعی از موارد استفاده یا حوادث

1. **مانیتورینگ در اوج بار هالووین ۲۰۱۵**:
   - اوبر در هالووین ۲۰۱۵، که دومین رویداد اوج بار سالانه پس از سال نو بود، از M3 و Prometheus برای مانیتورینگ استفاده کرد. این اولین باری بود که سیستم مشاهده‌پذیری اوبر در چنین رویدادی بدون قطعی عمل کرد.[](https://newsletter.pragmaticengineer.com/p/how-uber-built-its-observability-platform)
   - Prometheus معیارهای بلادرنگ مانند تعداد سفرها و تأخیر سرویس‌ها را رصد کرد و هشدارهای فوری برای مشکلات احتمالی ارائه داد.

2. **مانیتورینگ معیارهای تجاری**:
   - تیم پرداخت‌های اوبر (Rider Payments) از Prometheus و M3 برای رصد معیارهای تجاری مانند نرخ موفقیت پرداخت‌ها در شهرهای مختلف و پلتفرم‌های iOS و Android استفاده کرد.[](https://newsletter.pragmaticengineer.com/p/how-uber-built-its-observability-platform)
   - این امر به شناسایی سریع مشکلات پرداخت و بهبود تجربه کاربری کمک کرد.

3. **تشخیص ناهنجاری‌ها**:
   - اوبر از Prometheus برای شناسایی ناهنجاری‌ها در معیارهای سرویس‌ها، مانند افزایش ناگهانی نرخ خطا یا تأخیر، استفاده می‌کند. این اطلاعات برای عیب‌یابی سریع و جلوگیری از قطعی‌ها حیاتی است.

---

## چگونه Prometheus به بهبود قابلیت اطمینان و عملکرد سیستم اوبر کمک می‌کند

1. **قابلیت اطمینان**:
   - Prometheus امکان رصد بلادرنگ سلامت سرویس‌ها و زیرساخت‌ها را فراهم می‌کند، که به اوبر کمک می‌کند تا قبل از تأثیر بر کاربران، مشکلات را شناسایی کند.
   - سیستم هشداردهی Alertmanager با کاهش نویز و ارائه اعلان‌های دقیق، زمان واکنش به حوادث را کاهش می‌دهد.

2. **عملکرد**:
   - با استفاده از PromQL، اوبر می‌تواند گلوگاه‌های عملکرد (مانند تأخیر در APIها یا مصرف بالای منابع) را شناسایی و بهینه‌سازی کند.
   - داشبوردهای Grafana به تیم‌ها امکان می‌دهند تا معیارهای کلیدی را به‌صورت بصری تحلیل کنند.

3. **مقیاس‌پذیری**:
   - ادغام با M3 امکان ذخیره‌سازی و پرس‌وجوی معیارها در مقیاس بزرگ (بیش از ۶.۶ میلیارد سری زمانی و ۵۰۰ میلیون معیار در ثانیه) را فراهم می‌کند.[](https://www.cncf.io/case-studies/uber/)
   - این امر هزینه‌های ذخیره‌سازی را ۸.۵۳ برابر بهینه‌تر کرده و زمان راه‌اندازی سیستم‌های مانیتورینگ را ۴ برابر سریع‌تر کرده است.[](https://www.cncf.io/case-studies/uber/)

4. **کاهش بار عملیاتی**:
   - اوبر تعداد اعلان‌های فوری و غیرفوری را از ۲۵ در هفته (برای Cassandra) به ۱.۵ با M3DB کاهش داد، که نشان‌دهنده کاهش ۱۶.۶۷ برابری بار عملیاتی است.[](https://www.cncf.io/case-studies/uber/)

---

## درس‌های آموخته‌شده و بهترین روش‌های اوبر برای مانیتورینگ

1. **ساخت سیستم‌های مقیاس‌پذیر**:
   - اوبر دریافت که ابزارهای قدیمی مانند Graphite برای مقیاس‌های بزرگ مناسب نیستند. توسعه M3 برای رفع محدودیت‌های Prometheus در ذخیره‌سازی بلندمدت، مقیاس‌پذیری را بهبود بخشید.

2. **کاهش نویز هشدارها**:
   - استفاده از Origami برای تجمیع و کاهش نویز هشدارها، به‌ویژه در سناریوهای پیچیده مانند قطعی‌های چندشهری، حیاتی است.[](https://www.uber.com/blog/observability-at-scale/)
   - قوانین هشدار باید دقیق و معنی‌دار باشند تا از هشدارهای غیرضروری جلوگیری شود.

3. **ادغام با اکوسیستم متن‌باز**:
   - اوبر از اکسپورترهای Prometheus برای ابزارهای متن‌باز مانند Kafka و MySQL استفاده می‌کند، که ادغام را ساده‌تر می‌کند.

4. **مانیتورینگ جهانی**:
   - پرس‌وجوهای بین‌مراکز داده‌ای (Cross-Data Center) امکان مشاهده‌پذیری جهانی را فراهم می‌کنند، که برای عملیات جهانی اوبر ضروری است.

5. **آزمایش و شبیه‌سازی**:
   - اوبر سناریوهای اوج بار (مانند هالووین) را شبیه‌سازی می‌کند تا اطمینان حاصل کند که سیستم مانیتورینگ در شرایط بحرانی عملکرد خوبی دارد.

6. **تمرکز بر تجربه توسعه‌دهندگان**:
   - اوبر ابزارهایی مانند uMonitor را توسعه داد تا رابط‌های کاربری برای ویرایش و عیب‌یابی معیارها ارائه دهد، که تجربه توسعه‌دهندگان را بهبود می‌بخشد.

---

## مشارکت‌های متن‌باز و نوآوری‌های اوبر در ارتباط با Prometheus

اوبر مشارکت‌های قابل‌توجهی در اکوسیستم Prometheus داشته است، به‌ویژه با توسعه و متن‌باز کردن پلتفرم **M3**:

1. **M3 و M3DB**:
   - اوبر پلتفرم M3 را به‌عنوان یک ذخیره‌سازی مقیاس‌پذیر و چندمنظوره برای معیارهای Prometheus متن‌باز کرد.[](https://www.uber.com/en-FI/blog/m3/)
   - **M3DB** یک پایگاه داده سری زمانی توزیع‌شده است که معیارها را با نگه‌داری بلندمدت ذخیره می‌کند و از پرس‌وجوهای کم‌تأخیر پشتیبانی می‌کند.
   - **M3 Coordinator** امکان نمونه‌برداری، تجمیع و اعمال سیاست‌های نگه‌داری را فراهم می‌کند.

2. **مزایای M3**:
   - مقیاس‌پذیری: پشتیبانی از ۶.۶ میلیارد سری زمانی و ۵۰۰ میلیون معیار در ثانیه.
   - تحمل‌پذیری خطا: با ذخیره‌سازی توزیع‌شده و افزونگی، از دست رفتن داده‌ها جلوگیری می‌شود.
   - سازگاری با ابزارهای قدیمی: پشتیبانی از معیارهای StatsD و Graphite برای مهاجرت آسان.

3. **مشارکت در جامعه متن‌باز**:
   - اوبر از جامعه برای دریافت بازخورد و مشارکت در توسعه M3 دعوت کرده و کد منبع آن را در GitHub منتشر کرده است.[](https://www.uber.com/en-FI/blog/m3/)
   - این پلتفرم به شرکت‌های دیگر امکان می‌دهد تا از راه‌حل‌های مقیاس‌پذیر اوبر برای مانیتورینگ استفاده کنند.

4. **نوآوری در هشداردهی**:
   - اوبر ابزارهایی مانند **Origami** را برای مدیریت هشدارهای پیچیده توسعه داد، که نویز را کاهش داده و اعلان‌ها را به‌صورت تجمیعی ارائه می‌دهد.[](https://www.uber.com/blog/observability-at-scale/)

---

## خلاصه نقش Prometheus در مشاهده‌پذیری اوبر

**Prometheus** به اوبر کمک کرده است تا چالش‌های مانیتورینگ در مقیاس بزرگ را با موفقیت مدیریت کند. با استفاده از مدل داده چندبعدی، زبان پرس‌وجوی PromQL، و قابلیت‌های هشداردهی، اوبر می‌تواند سلامت سرویس‌ها، زیرساخت‌ها و معیارهای تجاری را به‌صورت بلادرنگ رصد کند. ادغام Prometheus با پلتفرم M3 امکان ذخیره‌سازی مقیاس‌پذیر و پرس‌وجوهای جهانی را فراهم کرده است، که هزینه‌ها را کاهش داده و قابلیت اطمینان را بهبود بخشیده است. 

نمونه‌های واقعی مانند مدیریت اوج بار هالووین ۲۰۱۵ و رصد معیارهای پرداخت نشان‌دهنده تأثیر Prometheus در عملیات اوبر است. مشارکت‌های متن‌باز اوبر، به‌ویژه M3 و M3DB، به جامعه فناوری کمک کرده تا راه‌حل‌های مشابهی را پیاده‌سازی کنند. بهترین روش‌های اوبر، مانند کاهش نویز هشدارها، ادغام با ابزارهای متن‌باز، و تمرکز بر مقیاس‌پذیری، درس‌های ارزشمندی برای طراحی سیستم‌های مانیتورینگ امن و قابل اعتماد ارائه می‌دهند. این رویکردها برای مهندسان نرم‌افزار که به‌دنبال ساخت سیستم‌های مقیاس‌پذیر هستند، الهام‌بخش است.